name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    name: Test on ${{ matrix.config.os }} ${{ matrix.config.arch }}
    runs-on: ${{ matrix.config.platform }}
    strategy:
      matrix:
        config:
          - {platform: windows-latest,   os: windows, arch: amd64, path: windows-x86_64}
          - {platform: macos-13,         os: darwin,  arch: amd64, path: darwin-x86_64}
          - {platform: macos-latest,     os: darwin,  arch: arm64, path: darwin-arm64}
          - {platform: ubuntu-latest,    os: linux,   arch: amd64, path: linux-x86_64}
          - {platform: raspbian-private, os: linux,   arch: arm64, path: linux-arm64}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install clippy
        run: rustup component add clippy --toolchain stable

      - name: Run clippy
        run: make clippy

      - name: Run tests
        run: make test


  release:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install targets
        run: |
          rustup target add x86_64-unknown-linux-gnu
          rustup target add aarch64-unknown-linux-gnu
          rustup target add x86_64-apple-darwin
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-pc-windows-gnu

      - name: Run linters
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --all-targets --all-features

      - name: Build binaries
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu
          cargo build --release --target aarch64-unknown-linux-gnu
          cargo build --release --target x86_64-apple-darwin
          cargo build --release --target aarch64-apple-darwin
          cargo build --release --target x86_64-pc-windows-gnu

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Linux x86_64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/x86_64-unknown-linux-gnu/release/core-cli
          asset_name: core-cli-x86_64-unknown-linux-gnu
          asset_content_type: application/octet-stream

      - name: Upload Linux aarch64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/aarch64-unknown-linux-gnu/release/core-cli
          asset_name: core-cli-aarch64-unknown-linux-gnu
          asset_content_type: application/octet-stream

      - name: Upload macOS x86_64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/x86_64-apple-darwin/release/core-cli
          asset_name: core-cli-x86_64-apple-darwin
          asset_content_type: application/octet-stream

      - name: Upload macOS aarch64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/aarch64-apple-darwin/release/core-cli
          asset_name: core-cli-aarch64-apple-darwin
          asset_content_type: application/octet-stream

      - name: Upload Windows x86_64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/x86_64-pc-windows-gnu/release/core-cli.exe
          asset_name: core-cli-x86_64-pc-windows-gnu.exe
          asset_content_type: application/octet-stream